// üìä celebrities„ÉÜ„Éº„Éñ„É´„ÅÆÊ≠£Á¢∫„Å™Áä∂ÊÖãÁ¢∫Ë™ç
import { createClient } from '@supabase/supabase-js'

const supabase = createClient(
  'https://awaarykghpylggygkiyp.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF3YWFyeWtnaHB5bGdneWdraXlwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE3OTE0MDksImV4cCI6MjA2NzM2NzQwOX0.J1dXm0eHB8RaqT_UnOI_zY7q1UyTaV4lLJtQT6EHhOE'
)

async function checkCelebritiesCount() {
  console.log('üìä celebrities„ÉÜ„Éº„Éñ„É´Ë©≥Á¥∞Á¢∫Ë™ç')
  console.log('================================')
  
  // 1. ÂÖ®‰Ωì„ÅÆË°åÊï∞Ôºàstatus„Å´Èñ¢‰øÇ„Å™„ÅèÔºâ
  const { count: totalCount, error: totalError } = await supabase
    .from('celebrities')
    .select('id', { count: 'exact', head: true })
  
  console.log('\n1Ô∏è‚É£ ÂÖ®Ë°åÊï∞ÔºàstatusÈñ¢‰øÇ„Å™„ÅóÔºâ:')
  console.log(`   ÂêàË®à: ${totalCount}Ë°å`)
  
  // 2. „Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™Ë°åÊï∞
  const { count: activeCount, error: activeError } = await supabase
    .from('celebrities')
    .select('id', { count: 'exact', head: true })
    .eq('status', 'active')
  
  console.log('\n2Ô∏è‚É£ „Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Å™Ë°åÊï∞:')
  console.log(`   active: ${activeCount}Ë°å`)
  
  // 3. statusÂà•„ÅÆÂÜÖË®≥
  const { data: statusBreakdown, error: statusError } = await supabase
    .from('celebrities')
    .select('status')
  
  if (statusBreakdown) {
    const statusMap = {}
    statusBreakdown.forEach(row => {
      statusMap[row.status || 'null'] = (statusMap[row.status || 'null'] || 0) + 1
    })
    
    console.log('\n3Ô∏è‚É£ statusÂà•ÂÜÖË®≥:')
    Object.entries(statusMap).forEach(([status, count]) => {
      console.log(`   ${status}: ${count}Ë°å`)
    })
  }
  
  // 4. „É¶„Éã„Éº„ÇØIDÁ¢∫Ë™ç
  const { data: allIds, error: idError } = await supabase
    .from('celebrities')
    .select('id')
  
  if (allIds) {
    const uniqueIds = new Set(allIds.map(row => row.id))
    console.log('\n4Ô∏è‚É£ „É¶„Éã„Éº„ÇØIDÁ¢∫Ë™ç:')
    console.log(`   ÂèñÂæóË°åÊï∞: ${allIds.length}Ë°å`)
    console.log(`   „É¶„Éã„Éº„ÇØIDÊï∞: ${uniqueIds.size}ÂÄã`)
    console.log(`   ÈáçË§á: ${allIds.length === uniqueIds.size ? '„Å™„Åó ‚úÖ' : '„ÅÇ„Çä ‚ö†Ô∏è'}`)
  }
  
  // 5. ÊúÄÊñ∞5‰ª∂„ÅÆ„Çµ„É≥„Éó„É´
  const { data: samples, error: sampleError } = await supabase
    .from('celebrities')
    .select('id, name, status, created_at')
    .order('created_at', { ascending: false })
    .limit(5)
  
  if (samples) {
    console.log('\n5Ô∏è‚É£ ÊúÄÊñ∞5‰ª∂:')
    samples.forEach((row, idx) => {
      console.log(`   ${idx + 1}. ${row.name} (${row.status}) - ${row.created_at?.substring(0, 10)}`)
    })
  }
  
  // 6. ÊùæÈáçË±ä„ÅÆÁ¢∫Ë™ç
  const { data: matsushige, error: matsushigeError } = await supabase
    .from('celebrities')
    .select('id, name, status, created_at')
    .ilike('name', '%ÊùæÈáç%')
  
  console.log('\n6Ô∏è‚É£ ÊùæÈáçË±ä„ÅÆÂ≠òÂú®Á¢∫Ë™ç:')
  if (matsushige && matsushige.length > 0) {
    matsushige.forEach(row => {
      console.log(`   ‚úÖ ${row.name} (${row.status}) - ID: ${row.id}`)
    })
  } else {
    console.log('   ‚ùå ÊùæÈáçË±ä„ÅØË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì')
  }
}

checkCelebritiesCount().then(() => {
  console.log('\n‚úÖ Á¢∫Ë™çÂÆå‰∫Ü')
  process.exit(0)
}).catch(error => {
  console.error('‚ùå „Ç®„É©„Éº:', error)
  process.exit(1)
})