#!/usr/bin/env node

/**
 * Season1 „Éá„Éº„ÇøÂàÜÈ°ûÊ≠£Â∏∏Âåñ
 * Ë™§ÂàÜÈ°û„Åï„Çå„ÅüSeason10/11„Ç®„Éî„ÇΩ„Éº„Éâ„ÇíÈô§Â§ñ„Åó„ÄÅÊ≠£„Åó„ÅÑSeason1„Éá„Éº„Çø„ÅÆ„Åø„Çí‰øùÊåÅ
 */

import { createClient } from '@supabase/supabase-js'
import * as dotenv from 'dotenv'

dotenv.config({ path: '.env.production' })

const supabaseUrl = process.env.VITE_SUPABASE_URL!
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY!
const supabase = createClient(supabaseUrl, supabaseKey)

async function fixSeason1DataClassification() {
  console.log('üîß Season1 „Éá„Éº„ÇøÂàÜÈ°ûÊ≠£Â∏∏ÂåñÈñãÂßã...\n')
  console.log('Ë™§ÂàÜÈ°û„Åï„Çå„ÅüSeason10/11„Ç®„Éî„ÇΩ„Éº„Éâ ‚Üí Ê≠£„Åó„ÅÑ„Éá„Éº„ÇøÂàÜÈ°û„Å∏‰øÆÊ≠£')
  console.log('=' .repeat(60))
  
  try {
    // ÊùæÈáçË±ä„ÅÆSeason1„Å®„Åó„Å¶ÂàÜÈ°û„Åï„Çå„Å¶„ÅÑ„ÇãÂÖ®„Ç®„Éî„ÇΩ„Éº„Éâ„ÇíÂèñÂæó
    const { data: celebrity } = await supabase
      .from('celebrities')
      .select(`
        id,
        slug,
        name,
        episodes(
          id,
          title,
          description,
          episode_locations(
            id,
            location_id,
            locations(
              id,
              name,
              address
            )
          )
        )
      `)
      .eq('slug', 'matsushige-yutaka')
      .single()
    
    if (!celebrity) {
      console.error('‚ùå ÊùæÈáçË±ä„ÅÆ„Éá„Éº„Çø„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì')
      return
    }
    
    // Season1„Å®„Åó„Å¶ÂàÜÈ°û„Åï„Çå„Å¶„ÅÑ„Çã„Ç®„Éî„ÇΩ„Éº„Éâ„ÇíÂàÜÊûê
    const season1Episodes = celebrity.episodes.filter((ep: any) => ep.title.includes('Season1'))
    
    console.log(`‚úÖ ÁèæÂú®„ÅÆSeason1ÂàÜÈ°û„Ç®„Éî„ÇΩ„Éº„Éâ: ${season1Episodes.length}Ë©±`)
    
    // Ê≠£„Åó„ÅÑSeason1„Ç®„Éî„ÇΩ„Éº„ÉâÔºàSeason1„Å®ÊòéË®ò„Åï„Çå„Å¶„ÅÑ„Çã„ÇÇ„ÅÆ„ÅÆ„ÅøÔºâ
    const correctSeason1Episodes = season1Episodes.filter((ep: any) => {
      return ep.title.includes('Season1') && 
             !ep.title.includes('Season10') && 
             !ep.title.includes('Season11')
    })
    
    // Ë™§ÂàÜÈ°û„Ç®„Éî„ÇΩ„Éº„ÉâÔºàSeason10/11Ôºâ
    const misclassifiedEpisodes = season1Episodes.filter((ep: any) => {
      return ep.title.includes('Season10') || ep.title.includes('Season11')
    })
    
    console.log(`\nüìä ÂàÜÈ°ûÂàÜÊûêÁµêÊûú:`)
    console.log(`   Ê≠£„Åó„ÅÑSeason1„Ç®„Éî„ÇΩ„Éº„Éâ: ${correctSeason1Episodes.length}Ë©±`)
    console.log(`   Ë™§ÂàÜÈ°û„Ç®„Éî„ÇΩ„Éº„Éâ: ${misclassifiedEpisodes.length}Ë©±`)
    
    if (misclassifiedEpisodes.length === 0) {
      console.log('\n‚úÖ Ë™§ÂàÜÈ°û„Ç®„Éî„ÇΩ„Éº„Éâ„ÅØË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì„Åß„Åó„Åü')
      console.log('Season1„Éá„Éº„Çø„ÅØÊó¢„Å´Ê≠£Â∏∏„Åß„Åô')
      return
    }
    
    console.log(`\nüîç Ë™§ÂàÜÈ°û„Ç®„Éî„ÇΩ„Éº„ÉâË©≥Á¥∞:`)
    console.log('-' .repeat(40))
    
    misclassifiedEpisodes.forEach((episode, index) => {
      console.log(`\n${index + 1}. ${episode.title}`)
      console.log(`   ID: ${episode.id}`)
      console.log(`   Ë™¨Êòé: ${episode.description || 'Ë™¨Êòé„Å™„Åó'}`)
      console.log(`   „É≠„Ç±„Éº„Ç∑„Éß„É≥Êï∞: ${episode.episode_locations?.length || 0}`)
    })
    
    console.log(`\n‚ö†Ô∏è ‰øÆÊ≠£ÊñπÈáù:`)
    console.log('„Åì„Çå„Çâ„ÅÆSeason10/11„Ç®„Éî„ÇΩ„Éº„Éâ„ÅØÊ≠£„Åó„ÅÑSeason„Ç´„ÉÜ„Ç¥„É™„Å´ÁßªÂãï„Åô„Çã„Åã„ÄÅ')
    console.log('Êú¨„Éó„É≠„Ç∏„Çß„ÇØ„Éà„ÅÆÂØæË±°Â§ñ„Åß„ÅÇ„Çå„Å∞ÂâäÈô§„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ')
    
    console.log(`\nüìã Êé®Â•®„Ç¢„ÇØ„Ç∑„Éß„É≥:`)
    console.log('1. Season10/11„Ç®„Éî„ÇΩ„Éº„Éâ„ÅÆÊâ±„ÅÑÊñπÈáùÊ±∫ÂÆö')
    console.log('   a) ÂâäÈô§ÔºàÂØæË±°Â§ñ„ÅÆÂ†¥ÂêàÔºâ')
    console.log('   b) Âà•„Ç´„ÉÜ„Ç¥„É™„Å´ÁßªÂãïÔºàÂê´„ÇÅ„ÇãÂ†¥ÂêàÔºâ')
    console.log('2. Ê≠£„Åó„ÅÑSeason1„Éá„Éº„Çø„ÅÆ„Åø‰øùÊåÅ')
    console.log('3. „Éá„Éº„ÇøÊï¥ÂêàÊÄß„ÅÆÁ¢∫‰øù')
    
    console.log(`\n‚úÖ Ê≠£„Åó„ÅÑSeason1„Ç®„Éî„ÇΩ„Éº„Éâ‰∏ÄË¶ß:`)
    console.log('-' .repeat(40))
    
    correctSeason1Episodes.forEach((episode, index) => {
      console.log(`\n${index + 1}. ${episode.title}`)
      console.log(`   ID: ${episode.id}`)
      console.log(`   „É≠„Ç±„Éº„Ç∑„Éß„É≥Êï∞: ${episode.episode_locations?.length || 0}`)
      
      if (episode.episode_locations && episode.episode_locations.length > 0) {
        episode.episode_locations.forEach((epLoc: any, locIndex: number) => {
          const location = epLoc.locations
          if (location) {
            console.log(`   ${locIndex + 1}. ${location.name} (${location.address})`)
          }
        })
      }
    })
    
    // Ê≠£„Åó„ÅÑSeason1„ÅÆÁµ±Ë®à
    const totalCorrectLocations = correctSeason1Episodes.reduce((total: number, ep: any) => 
      total + (ep.episode_locations?.length || 0), 0)
    
    console.log(`\nüìä Ê≠£„Åó„ÅÑSeason1Áµ±Ë®à:`)
    console.log(`   „Ç®„Éî„ÇΩ„Éº„ÉâÊï∞: ${correctSeason1Episodes.length}Ë©±`)
    console.log(`   „É≠„Ç±„Éº„Ç∑„Éß„É≥Êï∞: ${totalCorrectLocations}ÁÆáÊâÄ`)
    console.log(`   1„Ç®„Éî„ÇΩ„Éº„Éâ„ÅÇ„Åü„Çä: ${totalCorrectLocations > 0 ? Math.round(totalCorrectLocations / correctSeason1Episodes.length * 100) / 100 : 0}ÁÆáÊâÄ`)
    
    console.log(`\nüéØ Season1Ê≠£Â∏∏Âåñ„ÅÆÂäπÊûú:`)
    console.log('   ‚úÖ „Éá„Éº„ÇøÂàÜÈ°û„ÅÆÊ≠£Á¢∫ÊÄßÂêë‰∏ä')
    console.log('   ‚úÖ Ê§úÁ¥¢„ÉªË°®Á§∫„ÅÆÊ≠£Â∏∏Âåñ')
    console.log('   ‚úÖ „É¶„Éº„Ç∂„Éº‰ΩìÈ®ì„ÅÆÊîπÂñÑ')
    console.log('   ‚úÖ „Éá„Éº„ÇøÁÆ°ÁêÜ„ÅÆÁ∞°Á¥†Âåñ')
    
    console.log(`\nüíº Ê¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó:`)
    console.log('1. Season10/11„Ç®„Éî„ÇΩ„Éº„Éâ„ÅÆÂá¶ÁêÜÊñπÈáùÊ±∫ÂÆö')
    console.log('2. Ë™§ÂàÜÈ°û„Éá„Éº„Çø„ÅÆÂâäÈô§„Åæ„Åü„ÅØÁßªÂãïÂÆüË°å')
    console.log('3. Season1„Éá„Éº„Çø„ÅÆÊúÄÁµÇÊ§úË®º')
    console.log('4. ‰ªñSeasonÔºàSeason4Á≠âÔºâ„ÅÆ‰øÆÊ≠£„Å∏ÈÄ≤Ë°å')
    
    // Ë©≥Á¥∞„Å™‰øÆÊ≠£ÊâãÈ†Ü„ÇíÊèêÁ§∫
    console.log(`\nüîß ÂÖ∑‰ΩìÁöÑ‰øÆÊ≠£ÊâãÈ†ÜÔºàÊ¨°ÂõûÂÆüË°åÁî®Ôºâ:`)
    console.log('‰ª•‰∏ã„ÅÆID„ÅÆ„Ç®„Éî„ÇΩ„Éº„Éâ„ÅÆÂá¶ÁêÜ„ÅåÂøÖË¶ÅÔºö')
    misclassifiedEpisodes.forEach(episode => {
      console.log(`   Episode ID: ${episode.id} - ${episode.title}`)
    })
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error)
  }
}

// ÂÆüË°å
fixSeason1DataClassification().catch(console.error)