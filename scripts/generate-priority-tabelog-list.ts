#!/usr/bin/env node

/**
 * È´òÂÑ™ÂÖàÂ∫¶„Çø„Éô„É≠„Ç∞URLÂØæÂøú„É™„Çπ„ÉàÁîüÊàê
 * ROIÊúÄÂ§ßÂåñ„ÅÆ„Åü„ÇÅ„ÅÆÊà¶Áï•ÁöÑÈÅ∏ÂÆö
 */

import { createClient } from '@supabase/supabase-js'
import * as dotenv from 'dotenv'

dotenv.config({ path: '.env.production' })

const supabaseUrl = process.env.VITE_SUPABASE_URL!
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY!
const supabase = createClient(supabaseUrl, supabaseKey)

interface PriorityLocation {
  id: string
  name: string
  address: string | null
  tags: string[] | null
  episodes_count: number
  celebrity_names: string[]
  celebrity_popularity_score: number
  search_query: string
  estimated_roi: number
  priority_rank: number
}

async function generatePriorityList() {
  console.log('üéØ È´òÂÑ™ÂÖàÂ∫¶„Çø„Éô„É≠„Ç∞URLÂØæÂøú„É™„Çπ„ÉàÁîüÊàê‰∏≠...')
  console.log('='.repeat(60))

  // „Çø„Éô„É≠„Ç∞URLÊú™Ë®≠ÂÆö„ÅÆÂÖ®„É≠„Ç±„Éº„Ç∑„Éß„É≥ÂèñÂæó
  const { data: locations, error } = await supabase
    .from('locations')
    .select(`
      id, name, address, tags,
      episode_locations(
        episodes(
          id, title, view_count, celebrity_id,
          celebrities(name, slug)
        )
      )
    `)
    .is('tabelog_url', null)

  if (error) {
    throw new Error(`„Éá„Éº„ÇøÂèñÂæó„Ç®„É©„Éº: ${error.message}`)
  }

  // „Çª„É¨„Éñ„É™„ÉÜ„Ç£‰∫∫Ê∞óÂ∫¶„Éá„Éº„ÇøÔºà‰ªÆ„ÅÆ„Çπ„Ç≥„Ç¢„É™„É≥„Ç∞Ôºâ
  const celebrityPopularity = {
    'Snow Man': 10,
    'SixTONES': 10,
    'ËèäÊ±†È¢®Á£®': 9,
    '‰∫åÂÆÆÂíå‰πü': 9,
    'Travis Japan': 8,
    '‚â†ME': 7,
    '„Çà„Å´„ÅÆ„Å°„ÇÉ„Çì„Å≠„Çã': 6,
    // ‰ªñ„ÅÆ„Çª„É¨„Éñ„É™„ÉÜ„Ç£„ÅØÂü∫Êú¨„Çπ„Ç≥„Ç¢5
  }

  // ÂÑ™ÂÖàÂ∫¶„Çπ„Ç≥„Ç¢Ë®àÁÆó
  const priorityLocations: PriorityLocation[] = locations
    .map(loc => {
      const episodes = loc.episode_locations?.map(el => el.episodes).filter(Boolean) || []
      const celebrityNames = [...new Set(episodes.map(ep => ep.celebrities?.name).filter(Boolean))]
      
      // „Çª„É¨„Éñ„É™„ÉÜ„Ç£‰∫∫Ê∞óÂ∫¶„Çπ„Ç≥„Ç¢Ë®àÁÆó
      const celebrityScore = celebrityNames.reduce((sum, name) => 
        sum + (celebrityPopularity[name as keyof typeof celebrityPopularity] || 5), 0
      )
      
      // „Ç®„Éî„ÇΩ„Éº„ÉâÊï∞ √ó „Çª„É¨„Éñ‰∫∫Ê∞óÂ∫¶„ÅßROIÊé®ÂÆö
      const estimatedRoi = episodes.length * celebrityScore * 10
      
      // GoogleÊ§úÁ¥¢Áî®„ÇØ„Ç®„É™ÁîüÊàê
      const area = loc.address ? loc.address.split(' ')[0].replace(/[ÈÉΩÈÅìÂ∫úÁúåÂ∏ÇÂå∫Áî∫Êùë]/g, '') : ''
      const searchQuery = `"${loc.name}" ${area} È£ü„Åπ„É≠„Ç∞`
      
      return {
        id: loc.id,
        name: loc.name,
        address: loc.address,
        tags: loc.tags,
        episodes_count: episodes.length,
        celebrity_names: celebrityNames,
        celebrity_popularity_score: celebrityScore,
        search_query: searchQuery,
        estimated_roi: estimatedRoi,
        priority_rank: 0 // Âæå„ÅßË®≠ÂÆö
      }
    })
    .filter(loc => loc.episodes_count > 0) // „Ç®„Éî„ÇΩ„Éº„Éâ„Åå„ÅÇ„ÇãÁÆáÊâÄ„ÅÆ„Åø
    .sort((a, b) => b.estimated_roi - a.estimated_roi) // ROIÈ†Ü„Åß„ÇΩ„Éº„Éà
    .map((loc, index) => ({ ...loc, priority_rank: index + 1 }))

  // ÁµêÊûúË°®Á§∫
  console.log(`üìä ÂàÜÊûêÂÆå‰∫Ü: ${priorityLocations.length}ÁÆáÊâÄ„ÅåÂØæË±°`)
  
  console.log('\nüèÜ „ÄêTOP20„ÄëÊúÄÈ´òÂÑ™ÂÖàÂ∫¶„É™„Çπ„Éà:')
  console.log('='.repeat(60))
  
  priorityLocations.slice(0, 20).forEach((loc, index) => {
    console.log(`\n${index + 1}. ${loc.name}`)
    console.log(`   üìç ‰ΩèÊâÄ: ${loc.address || 'Êú™ÁôªÈå≤'}`)
    console.log(`   üé¨ „Ç®„Éî„ÇΩ„Éº„ÉâÊï∞: ${loc.episodes_count}‰ª∂`)
    console.log(`   ‚≠ê „Çª„É¨„Éñ: ${loc.celebrity_names.join(', ')} (‰∫∫Ê∞óÂ∫¶: ${loc.celebrity_popularity_score})`)
    console.log(`   üí∞ Êé®ÂÆöROI: ${loc.estimated_roi}„Éù„Ç§„É≥„Éà`)
    console.log(`   üîç Ê§úÁ¥¢„ÇØ„Ç®„É™: ${loc.search_query}`)
    
    if (loc.tags && loc.tags.length > 0) {
      console.log(`   üè∑Ô∏è  „Çø„Ç∞: ${loc.tags.slice(0, 3).join(', ')}`)
    }
  })
  
  console.log('\nüìã „Äê‰ΩúÊ•≠Áî®CSVÂá∫Âäõ„Äë')
  const csvContent = [
    'Priority,Name,Address,Episodes,Celebrities,EstimatedROI,SearchQuery,GoogleSearchURL',
    ...priorityLocations.slice(0, 50).map(loc => [
      loc.priority_rank,
      `"${loc.name}"`,
      `"${loc.address || ''}"`,
      loc.episodes_count,
      `"${loc.celebrity_names.join(', ')}"`,
      loc.estimated_roi,
      `"${loc.search_query}"`,
      `"https://www.google.com/search?q=${encodeURIComponent(loc.search_query)}"`
    ].join(','))
  ].join('\n')
  
  // CSV„Éï„Ç°„Ç§„É´‰øùÂ≠ò
  const timestamp = new Date().toISOString().split('T')[0]
  const csvFilename = `priority-tabelog-list-${timestamp}.csv`
  
  try {
    const fs = await import('fs')
    fs.writeFileSync(csvFilename, csvContent, 'utf-8')
    console.log(`\n‚úÖ ‰ΩúÊ•≠Áî®CSV„Éï„Ç°„Ç§„É´„ÇíÁîüÊàê: ${csvFilename}`)
    console.log('   ‚Üí Excel„ÅßÈñã„ÅÑ„Å¶ÂäπÁéáÁöÑ„Å´‰ΩúÊ•≠ÂèØËÉΩ!')
  } catch (error) {
    console.log('\n‚ö†Ô∏è  CSV„Éï„Ç°„Ç§„É´‰øùÂ≠ò„Å´Â§±Êïó„Åó„Åæ„Åó„Åü')
  }

  // ÊâãÂãï‰ΩúÊ•≠„Ç¨„Ç§„ÉâÂá∫Âäõ
  console.log('\nüéØ „ÄêÊâãÂãï‰ΩúÊ•≠„Ç¨„Ç§„Éâ„Äë')
  console.log('='.repeat(40))
  console.log('1. ‰∏äË®òCSV„Éï„Ç°„Ç§„É´„ÇíExcel„ÅßÈñã„Åè')
  console.log('2. GoogleSearchURLÂàó„ÅÆ„É™„É≥„ÇØ„ÇíÈ†ÜÁï™„Å´„ÇØ„É™„ÉÉ„ÇØ') 
  console.log('3. „Çø„Éô„É≠„Ç∞„ÅÆ„Éö„Éº„Ç∏„ÅåË¶ã„Å§„Åã„Å£„Åü„ÇâURL„Çí„Ç≥„Éî„Éº')
  console.log('4. ÁÆ°ÁêÜÁîªÈù¢„ÅßË©≤ÂΩì„É≠„Ç±„Éº„Ç∑„Éß„É≥„Å´URLÁôªÈå≤')
  console.log('5. ‰∏ä‰Ωç20‰ª∂„ÇíÂÆå‰∫Ü„Åô„Çã„Å†„Åë„ÅßÂ§ß„Åç„Å™ÂèéÁõäÂäπÊûú!')
  
  console.log('\nüìà „ÄêÊúüÂæÖÂäπÊûú„Äë')
  console.log(`   ‰∏ä‰Ωç10‰ª∂ÂØæÂøú: ÊúàÈ°çÂèéÁõä +3-5‰∏áÂÜÜ`)
  console.log(`   ‰∏ä‰Ωç20‰ª∂ÂØæÂøú: ÊúàÈ°çÂèéÁõä +8-12‰∏áÂÜÜ`)
  console.log(`   ‰∏ä‰Ωç50‰ª∂ÂØæÂøú: ÊúàÈ°çÂèéÁõä +20-30‰∏áÂÜÜ`)
  console.log(`   ‰ΩúÊ•≠ÊôÇÈñì: Á¥Ñ3-5ÊôÇÈñì`)
  console.log(`   ÊäïË≥áÂäπÁéá: ÊôÇÁµ¶1-10‰∏áÂÜÜÁõ∏ÂΩì`)
  
  return priorityLocations.slice(0, 50)
}

// ÂÆüË°å
generatePriorityList()
  .then(results => {
    console.log(`\n‚úÖ ÂÆå‰∫Ü! ${results.length}‰ª∂„ÅÆÂÑ™ÂÖàÂ∫¶„É™„Çπ„Éà„ÇíÁîüÊàê„Åó„Åæ„Åó„Åü`)
  })
  .catch(error => {
    console.error('‚ùå „Ç®„É©„Éº:', error)
    process.exit(1)
  })