import { createClient } from '@supabase/supabase-js'
import * as dotenv from 'dotenv'

// .env„Éï„Ç°„Ç§„É´„Åã„ÇâÁí∞Â¢ÉÂ§âÊï∞„ÇíË™≠„ÅøËæº„Åø
dotenv.config()

// Áí∞Â¢ÉÂ§âÊï∞„Åã„ÇâSupabase„ÇØ„É©„Ç§„Ç¢„É≥„Éà„Çí‰ΩúÊàê
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://ounloyykptsqzdpbsnpn.supabase.co'
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im91bmxveXlrcHRzcXpkcGJzbnBuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ3MjIzODMsImV4cCI6MjA3MDI5ODM4M30.VpSq034vLWHH3n_W-ikJyho6BuwY6UahN52V9US5n0U'

const supabase = createClient(supabaseUrl, supabaseAnonKey)

// ÂÑ™ÂÖàÂ∫¶2: Ë§áÊï∞„Ç®„Éî„ÇΩ„Éº„Éâ„ÅßÁôªÂ†¥„Åô„Çã‰∫∫Ê∞ó„Çπ„Éù„ÉÉ„Éà„ÅÆÈ´òÂìÅË≥™ÂÆüÁîªÂÉè
const priority2LocationImages = [
  {
    name: '„Åô„Åø„Å†Ê∞¥ÊóèÈ§®',
    images: [
      'https://images.unsplash.com/photo-1544551763-46a013bb70d5?w=400&h=250&fit=crop&q=80', // Ê∞¥ÊóèÈ§®ÂÜÖÈÉ®„ÄÅÈ≠ö„ÅÆÁæ§„Çå
      'https://images.unsplash.com/photo-1583212292454-1fe6229603b7?w=400&h=250&fit=crop&q=80', // Ê∞¥ÊóèÈ§®„ÅÆÂπªÊÉ≥ÁöÑ„Å™ÁÖßÊòé
      'https://images.unsplash.com/photo-1520637836862-4d197d17c92a?w=400&h=250&fit=crop&q=80'  // „ÇØ„É©„Ç≤„ÅÆÁæé„Åó„ÅÑÂ±ïÁ§∫
    ],
    description: 'Êù±‰∫¨„Çπ„Ç´„Ç§„ÉÑ„É™„Éº„Çø„Ç¶„É≥„Å´„ÅÇ„Çã‰∫∫Ê∞ó„ÅÆÊ∞¥ÊóèÈ§®„ÄÇ„Éö„É≥„ÇÆ„É≥„ÇÑ„ÇØ„É©„Ç≤„Å™„Å©Â§öÂΩ©„Å™Êµ∑„ÅÆÁîü„ÅçÁâ©„ÇíÂ±ïÁ§∫',
    category: 'tourist'
  },
  {
    name: 'Êù±‰∫¨„Éâ„Éº„É†',
    images: [
      'https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=250&fit=crop&q=80', // Êù±‰∫¨„Éâ„Éº„É†Â§ñË¶≥
      'https://images.unsplash.com/photo-1574629810360-7efbbe195018?w=400&h=250&fit=crop&q=80', // „Çπ„Çø„Ç∏„Ç¢„É†ÂÜÖÈÉ®
      'https://images.unsplash.com/photo-1459865264687-595d652de67e?w=400&h=250&fit=crop&q=80'  // „Éâ„Éº„É†ÁêÉÂ†¥„ÅÆÁÖßÊòé
    ],
    description: 'Êó•Êú¨Âàù„ÅÆÂ±ãÊ†π‰ªò„ÅçÁêÉÂ†¥„Å®„Åó„Å¶Ë¶™„Åó„Åæ„Çå„ÇãÊù±‰∫¨„Éâ„Éº„É†„ÄÇÈáéÁêÉË¶≥Êà¶„ÇÑ„Ç≥„É≥„Çµ„Éº„Éà„Å™„Å©Â§öÁõÆÁöÑ„Å´Âà©Áî®',
    category: 'tourist'
  },
  {
    name: 'ÈäÄÂ∫ß‰∏âË∂ä',
    images: [
      'https://images.unsplash.com/photo-1555529902-1974e9dd9e97?w=400&h=250&fit=crop&q=80', // È´òÁ¥ö„Éá„Éë„Éº„ÉàÂ§ñË¶≥
      'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400&h=250&fit=crop&q=80', // „Éá„Éë„Éº„ÉàÂÜÖÈÉ®„ÅÆ„É©„Ç∞„Ç∏„É•„Ç¢„É™„ÉºÁ©∫Èñì
      'https://images.unsplash.com/photo-1441986300917-64674bd600d8?w=400&h=250&fit=crop&q=80'  // È´òÁ¥ö„Ç∑„Éß„ÉÉ„Éî„É≥„Ç∞
    ],
    description: 'ÈäÄÂ∫ß„Çí‰ª£Ë°®„Åô„ÇãËÄÅËàóÁôæË≤®Â∫ó„ÄÇÊúÄÈ´òÁ¥ö„ÅÆ„Éï„Ç°„ÉÉ„Ç∑„Éß„É≥„ÄÅ„Ç∞„É´„É°„ÄÅ„É©„Ç§„Éï„Çπ„Çø„Ç§„É´ÂïÜÂìÅ„ÅåÊèÉ„ÅÜ',
    category: 'shop'
  },
  {
    name: 'Ê∏ãË∞∑„Çπ„ÇØ„É©„É≥„Éñ„É´‰∫§Â∑ÆÁÇπ',
    images: [
      'https://images.unsplash.com/photo-1540959733332-eab4deabeeaf?w=400&h=250&fit=crop&q=80', // „Çπ„ÇØ„É©„É≥„Éñ„É´‰∫§Â∑ÆÁÇπ„ÅÆ‰∫∫Ê≥¢
      'https://images.unsplash.com/photo-1513407030348-c983a97b98d8?w=400&h=250&fit=crop&q=80', // Ê∏ãË∞∑„ÅÆÂ§úÊôØ
      'https://images.unsplash.com/photo-1503899036084-c55cdd92da26?w=400&h=250&fit=crop&q=80'  // Ê∏ãË∞∑‰∫§Â∑ÆÁÇπ‰∏äÁ©∫„Åã„Çâ„ÅÆÊíÆÂΩ±
    ],
    description: '‰∏ñÁïå„ÅßÊúÄ„ÇÇÊúâÂêç„Å™‰∫§Â∑ÆÁÇπ„ÅÆ‰∏Ä„Å§„ÄÇ1Êó•Á¥Ñ50‰∏á‰∫∫„ÅåË°å„Åç‰∫§„ÅÜÊù±‰∫¨„ÅÆË±°Âæ¥ÁöÑ„Å™„Çπ„Éù„ÉÉ„Éà',
    category: 'tourist'
  },
  {
    name: 'Êù±‰∫¨„Çø„ÉØ„Éº',
    images: [
      'https://images.unsplash.com/photo-1549693578-d683be217e58?w=400&h=250&fit=crop&q=80', // Êù±‰∫¨„Çø„ÉØ„Éº„ÅÆËµ§„ÅÑÂßø
      'https://images.unsplash.com/photo-1536098561742-ca998e48cbcc?w=400&h=250&fit=crop&q=80', // Â§ú„ÅÆÊù±‰∫¨„Çø„ÉØ„Éº
      'https://images.unsplash.com/photo-1480796927426-f609979314bd?w=400&h=250&fit=crop&q=80'  // Êù±‰∫¨„Çø„ÉØ„Éº„Å®Ë°ó‰∏¶„Åø
    ],
    description: '1958Âπ¥ÈñãÊ•≠„ÅÆÊù±‰∫¨„ÅÆ„Ç∑„É≥„Éú„É´„ÄÇÈ´ò„Åï333m„ÅÆÈõªÊ≥¢Â°î„Åß„ÄÅÂ±ïÊúõÂè∞„Åã„Çâ„ÅØÊù±‰∫¨„ÅÆÁµ∂ÊôØ„ÇíÊúõ„ÇÅ„Çã',
    category: 'tourist'
  },
  {
    name: 'ÊµÖËçâÂØ∫',
    images: [
      'https://images.unsplash.com/photo-1480714378408-67cf0d13bc1f?w=400&h=250&fit=crop&q=80', // ÊµÖËçâÂØ∫„ÅÆÈõ∑ÈñÄ
      'https://images.unsplash.com/photo-1545569341-9eb8b30979d9?w=400&h=250&fit=crop&q=80', // ÊµÖËçâÂØ∫Êú¨Â†Ç
      'https://images.unsplash.com/photo-1570077188670-e3a8d69ac5ff?w=400&h=250&fit=crop&q=80'  // ÊµÖËçâ„ÅÆ‰ª≤Ë¶ã‰∏ñÈÄö„Çä
    ],
    description: 'Êù±‰∫¨ÊúÄÂè§„ÅÆÂØ∫Èô¢„Å®„Åó„Å¶1400Âπ¥„ÅÆÊ≠¥Âè≤„ÇíÊåÅ„Å§„ÄÇÈõ∑ÈñÄ„Å®‰ª≤Ë¶ã‰∏ñÈÄö„Çä„ÅßÁü•„Çâ„Çå„ÇãÊù±‰∫¨„ÅÆ‰ª£Ë°®ÁöÑË¶≥ÂÖâÂú∞',
    category: 'tourist'
  },
  {
    name: 'Êñ∞ÂÆøÂæ°Ëãë',
    images: [
      'https://images.unsplash.com/photo-1522383225653-ed111181a951?w=400&h=250&fit=crop&q=80', // Êñ∞ÂÆøÂæ°Ëãë„ÅÆÊ°ú
      'https://images.unsplash.com/photo-1580477667995-2b94f01c9516?w=400&h=250&fit=crop&q=80', // Êó•Êú¨Â∫≠Âúí„ÅÆÁæé„Åó„ÅÑÊ±†
      'https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=250&fit=crop&q=80'  // ÂÖ¨Âúí„ÅÆÁ∑ëË±ä„Åã„Å™È¢®ÊôØ
    ],
    description: 'Êñ∞ÂÆø„ÅÆ‰∏≠ÂøÉ„Å´„ÅÇ„Çã58.3ha„ÅÆÂ∫ÉÂ§ß„Å™ÂõΩÊ∞ëÂÖ¨Âúí„ÄÇÂõõÂ≠£Êäò„ÄÖ„ÅÆÁæé„Åó„ÅÑËá™ÁÑ∂„Å®Êó•Êú¨Â∫≠Âúí„ÅåÊ•Ω„Åó„ÇÅ„Çã',
    category: 'tourist'
  },
  {
    name: '‰∏äÈáéÂãïÁâ©Âúí',
    images: [
      'https://images.unsplash.com/photo-1549366021-9f761d040a94?w=400&h=250&fit=crop&q=80', // „Éë„É≥„ÉÄÔºàÂãïÁâ©Âúí„ÅÆ‰∫∫Ê∞óËÄÖÔºâ
      'https://images.unsplash.com/photo-1518709268805-4e9042af2176?w=400&h=250&fit=crop&q=80', // ÂãïÁâ©Âúí„ÅÆËá™ÁÑ∂Áí∞Â¢É
      'https://images.unsplash.com/photo-1574146681337-f0b6709f0b58?w=400&h=250&fit=crop&q=80'  // ÂãïÁâ©Âúí„ÅÆÂÖ•Âè£„ÇÑÊñΩË®≠
    ],
    description: '1882Âπ¥ÈñãÂúí„ÅÆÊó•Êú¨ÊúÄÂè§„ÅÆÂãïÁâ©Âúí„ÄÇ„Ç∏„É£„Ç§„Ç¢„É≥„Éà„Éë„É≥„ÉÄ„Çí„ÅØ„Åò„ÇÅÁ¥Ñ400Á®Æ3000ÁÇπ„ÅÆÂãïÁâ©„ÇíÈ£ºËÇ≤',
    category: 'tourist'
  }
]

async function addPriority2LocationImages() {
  console.log('üé® Adding high-quality images to Priority 2 locations (multi-episode popular spots)...')
  
  for (const locationData of priority2LocationImages) {
    try {
      // „É≠„Ç±„Éº„Ç∑„Éß„É≥Âêç„ÅßÊ§úÁ¥¢ÔºàË§áÊï∞„ÅÆ„Éë„Çø„Éº„É≥„Å´ÂØæÂøúÔºâ
      let searchConditions = [locationData.name]
      
      // ÁâπÂà•„Å™Ê§úÁ¥¢„Éë„Çø„Éº„É≥„ÇíËøΩÂä†
      if (locationData.name === 'ÈäÄÂ∫ß‰∏âË∂ä') {
        searchConditions.push('‰∏âË∂ä', 'ÈäÄÂ∫ß ‰∏âË∂ä')
      } else if (locationData.name === 'Ê∏ãË∞∑„Çπ„ÇØ„É©„É≥„Éñ„É´‰∫§Â∑ÆÁÇπ') {
        searchConditions.push('„Çπ„ÇØ„É©„É≥„Éñ„É´‰∫§Â∑ÆÁÇπ', 'Ê∏ãË∞∑ ‰∫§Â∑ÆÁÇπ', 'Ê∏ãË∞∑‰∫§Â∑ÆÁÇπ')
      } else if (locationData.name === 'ÊµÖËçâÂØ∫') {
        searchConditions.push('ÊµÖËçâ ÂØ∫', 'Èõ∑ÈñÄ')
      } else if (locationData.name === 'Êñ∞ÂÆøÂæ°Ëãë') {
        searchConditions.push('Êñ∞ÂÆø Âæ°Ëãë')
      } else if (locationData.name === '‰∏äÈáéÂãïÁâ©Âúí') {
        searchConditions.push('‰∏äÈáé ÂãïÁâ©Âúí')
      }
      
      let location = null
      
      // ÂêÑÊ§úÁ¥¢Êù°‰ª∂„ÅßÈ†ÜÁï™„Å´Ê§úÁ¥¢
      for (const searchName of searchConditions) {
        const { data: locations, error: searchError } = await supabase
          .from('locations')
          .select('*')
          .ilike('name', `%${searchName}%`)
          .limit(5) // Ë§áÊï∞ÂÄôË£ú„ÇíÂèñÂæó
        
        if (searchError) {
          console.error(`‚ùå Error searching for ${searchName}:`, searchError)
          continue
        }
        
        if (locations && locations.length > 0) {
          // „Çà„ÇäÈÅ©Âàá„Å™„Éû„ÉÉ„ÉÅ„ÇíÈÅ∏Êäû
          location = locations.find(loc => 
            loc.name.includes(locationData.name) || 
            locationData.name.includes(loc.name) ||
            searchConditions.some(condition => loc.name.includes(condition))
          ) || locations[0]
          
          console.log(`üìç Found location: ${location.name} (${location.id}) - searched for: ${searchName}`)
          break
        }
      }
      
      if (!location) {
        console.log(`‚ö†Ô∏è  Location not found: ${locationData.name}`)
        continue
      }
      
      // ÁîªÂÉèURLs„ÄÅË™¨Êòé„ÄÅ„Ç´„ÉÜ„Ç¥„É™„ÇíÊõ¥Êñ∞
      const { error: updateError } = await supabase
        .from('locations')
        .update({
          image_urls: locationData.images,
          description: locationData.description,
          category: locationData.category
        })
        .eq('id', location.id)
      
      if (updateError) {
        console.error(`‚ùå Error updating ${location.name}:`, updateError)
        continue
      }
      
      console.log(`‚úÖ Updated ${location.name} with ${locationData.images.length} high-quality images`)
      
      // „Ç´„ÉÜ„Ç¥„É™„ÇÇÊõ¥Êñ∞„Åï„Çå„ÅüÂ†¥Âêà„ÅØÈÄöÁü•
      if (location.category !== locationData.category) {
        console.log(`   üìÇ Category updated: ${location.category} ‚Üí ${locationData.category}`)
      }
      
    } catch (error) {
      console.error(`‚ùå Unexpected error processing ${locationData.name}:`, error)
    }
  }
  
  console.log('\nüéâ Priority 2 location image update completed!')
}

// „Éá„Éº„Çø„Éô„Éº„ÇπÊé•Á∂ö„Çí„ÉÜ„Çπ„Éà
async function testConnection() {
  const { data, error } = await supabase
    .from('locations')
    .select('count(*)')
    .limit(1)
  
  if (error) {
    console.error('‚ùå Database connection failed:', error)
    process.exit(1)
  }
  
  console.log('‚úÖ Database connection successful')
  return true
}

// „É°„Ç§„É≥ÂÆüË°å
async function main() {
  console.log('üöÄ Starting Priority 2 location image update process...')
  console.log('üéØ Target: Multi-episode popular tourist spots')
  
  await testConnection()
  await addPriority2LocationImages()
  
  console.log('\nüìä Verifying updates...')
  
  // Êõ¥Êñ∞ÁµêÊûú„ÇíÁ¢∫Ë™ç
  for (const locationData of priority2LocationImages) {
    const { data: locations } = await supabase
      .from('locations')
      .select('name, image_urls, category, description')
      .ilike('name', `%${locationData.name}%`)
      .limit(1)
    
    if (locations && locations.length > 0) {
      const location = locations[0]
      console.log(`üìç ${location.name}:`)
      console.log(`   Images: ${location.image_urls?.length || 0} URLs`)
      console.log(`   Category: ${location.category}`)
      console.log(`   Description: ${location.description ? 'Updated' : 'None'}`)
    }
  }
  
  console.log('\nüéØ Next: Priority 3 locations (well-known fan pilgrimage sites)')
}

// ES moduleÁî®„ÅÆ„É°„Ç§„É≥ÂÆüË°å„ÉÅ„Çß„ÉÉ„ÇØ
import { fileURLToPath } from 'url'

if (import.meta.url === `file://${process.argv[1]}`) {
  main().catch(console.error)
}