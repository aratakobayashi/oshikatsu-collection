#!/usr/bin/env node
/**
 * ÂèéÈõÜ„Åï„Çå„Åü„Éá„Éº„Çø„ÇíÁ¢∫Ë™ç„Åô„Çã„Çπ„ÇØ„É™„Éó„Éà
 */

const https = require('https');

const SUPABASE_URL = 'https://ounloyykptsqzdpbsnpn.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im91bmxveXlrcHRzcXpkcGJzbnBuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ3MjIzODMsImV4cCI6MjA3MDI5ODM4M30.VpSq034vLWHH3n_W-ikJyho6BuwY6UahN52V9US5n0U';

function httpsRequest(url, options = {}) {
  return new Promise((resolve, reject) => {
    const req = https.request(url, options, (res) => {
      let data = '';
      res.on('data', chunk => data += chunk);
      res.on('end', () => {
        try {
          resolve(JSON.parse(data));
        } catch (e) {
          resolve(data);
        }
      });
    });
    req.on('error', reject);
    req.end();
  });
}

async function checkData() {
  console.log('üìä ÂèéÈõÜ„Éá„Éº„Çø„ÅÆÁ¢∫Ë™ç\n');
  console.log('='.repeat(60));
  
  try {
    // „Ç®„Éî„ÇΩ„Éº„Éâ„Éá„Éº„Çø„ÇíÂèñÂæó
    const episodeOptions = {
      headers: {
        'apikey': SUPABASE_ANON_KEY,
        'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
        'Content-Type': 'application/json'
      }
    };
    
    const episodes = await httpsRequest(
      `${SUPABASE_URL}/rest/v1/episodes?select=*&order=view_count.desc`,
      episodeOptions
    );
    
    console.log(`üì∫ „Ç®„Éî„ÇΩ„Éº„ÉâÁ∑èÊï∞: ${episodes.length}‰ª∂\n`);
    
    // TOP 10„ÇíË°®Á§∫
    console.log('üèÜ TOP 10 ‰∫∫Ê∞óÂãïÁîª:');
    console.log('='.repeat(60));
    
    episodes.slice(0, 10).forEach((ep, index) => {
      const views = ep.view_count ? (ep.view_count / 1000000).toFixed(1) + 'M' : 'N/A';
      const title = ep.title?.slice(0, 50) || '„Çø„Ç§„Éà„É´„Å™„Åó';
      console.log(`${index + 1}. ${title}...`);
      console.log(`   üëÅÔ∏è ${views} views | üëç ${ep.like_count || 0} likes`);
      console.log(`   üìÖ ${new Date(ep.date).toLocaleDateString('ja-JP')}`);
      console.log(`   üîó ${ep.video_url}`);
      console.log();
    });
    
    // Áµ±Ë®àÊÉÖÂ†±
    console.log('='.repeat(60));
    console.log('üìà Áµ±Ë®àÊÉÖÂ†±:');
    
    const totalViews = episodes.reduce((sum, ep) => sum + (ep.view_count || 0), 0);
    const avgViews = Math.round(totalViews / episodes.length);
    const maxViews = Math.max(...episodes.map(ep => ep.view_count || 0));
    
    console.log(`   Á∑èÂÜçÁîüÂõûÊï∞: ${(totalViews / 1000000).toFixed(1)}MÂõû`);
    console.log(`   Âπ≥ÂùáÂÜçÁîüÂõûÊï∞: ${(avgViews / 1000000).toFixed(1)}MÂõû`);
    console.log(`   ÊúÄÈ´òÂÜçÁîüÂõûÊï∞: ${(maxViews / 1000000).toFixed(1)}MÂõû`);
    
    // „Çª„É¨„Éñ„É™„ÉÜ„Ç£„Éá„Éº„Çø„ÇÇÁ¢∫Ë™ç
    const celebrities = await httpsRequest(
      `${SUPABASE_URL}/rest/v1/celebrities?select=*`,
      episodeOptions
    );
    
    console.log(`\nüë§ „Çª„É¨„Éñ„É™„ÉÜ„Ç£: ${celebrities.length}‰ª∂`);
    celebrities.forEach(celeb => {
      console.log(`   - ${celeb.name} (${celeb.type})`);
    });
    
  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error.message);
  }
}

checkData();